version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 10
  pre_build:
    commands:
      - aws --version
      - echo $CODEBUILD_RESOLVED_SOURCE_VERSION
      - TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo NPM install...
      - npm i
      - echo Build Client Scripts...
      - NODE_ENV=production npm run build:client
      - echo Build Server Scripts...
      - NODE_ENV=production npm run build:server
      - rm -rf ./node_modules
      - echo NPM install for production...
      - npm i --production
      - echo Building the Lambda zip...
      - mkdir build
      - cp ./dist/lambda.js ./build/lambda.js
      - cp -r public ./build/public
      - cp -r dist ./build/dist
      - cp -r node_modules ./build/node_modules
      - cd ./build && zip -r entry-$TAG.zip ./ && cd ../
      - mv build/entry-$TAG.zip entry-$TAG.zip
      - cp entry-$TAG.zip entry.zip
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Lambda zip...
      - aws lambda update-function-code --function-name $FUNCTION_NAME --zip-file fileb://entry-$TAG.zip
      - echo Writing result...
      - printf '[{"name":"%s","zip_filename":"%s"}]' $FUNCTION_NAME entry-$TAG.zip > result.json
artifacts:
  files:
    - entry.zip
    - result.json
